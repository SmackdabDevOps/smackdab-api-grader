openapi: 3.0.3
info:
  title: Master API Template
  version: 3.0.0
  description: Master template for API grading
  contact:
    email: api@example.com
servers:
  - url: https://api.example.com/api/v2
    description: Production server
components:
  parameters:
    OrganizationHeader:
      name: X-Organization-ID
      in: header
      required: true
      schema:
        type: string
        format: uuid
      description: Organization identifier for multi-tenancy
    BranchHeader:
      name: X-Branch-ID
      in: header
      required: true
      schema:
        type: string
        format: uuid
      description: Branch identifier for multi-tenancy
    AfterKey:
      name: after_key
      in: query
      required: false
      schema:
        type: string
      description: Key-set pagination cursor
    Limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        maximum: 100
        default: 20
      description: Maximum number of items to return
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.example.com/oauth/authorize
          tokenUrl: https://auth.example.com/oauth/token
          scopes:
            read: Read access to protected resources
            write: Write access to protected resources
            admin: Administrative access
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT bearer token authentication
  schemas:
    ResponseEnvelope:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful
        data:
          type: object
          description: Response payload
        meta:
          type: object
          description: Response metadata
          properties:
            next_key:
              type: string
              description: Pagination cursor for next page
            organization_id:
              type: string
              format: uuid
              description: Organization context
            request_id:
              type: string
              format: uuid
              description: Unique request identifier
    ErrorResponse:
      type: object
      required:
        - type
        - title
        - status
      properties:
        type:
          type: string
          format: uri
          description: URI reference for error type
        title:
          type: string
          description: Short human-readable summary
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Human-readable explanation
        instance:
          type: string
          format: uri
          description: URI reference for specific occurrence
  responses:
    401Unauthorized:
      description: Authentication required
      headers:
        WWW-Authenticate:
          schema:
            type: string
            description: Authentication challenge
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    429TooManyRequests:
      description: Rate limit exceeded
      headers:
        Retry-After:
          schema:
            type: integer
            description: Seconds to wait before retry
        X-RateLimit-Limit:
          schema:
            type: integer
            description: Request limit per window
        X-RateLimit-Remaining:
          schema:
            type: integer
            description: Remaining requests in window
        X-RateLimit-Reset:
          schema:
            type: integer
            description: Unix timestamp when limit resets
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    503ServiceUnavailable:
      description: Service temporarily unavailable
      headers:
        Retry-After:
          schema:
            type: integer
            description: Seconds to wait before retry
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
paths:
  /health:
    get:
      summary: Health check endpoint
      operationId: getHealth
      tags:
        - System
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  version:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
  /items:
    parameters:
      - $ref: '#/components/parameters/OrganizationHeader'
      - $ref: '#/components/parameters/BranchHeader'
    get:
      summary: List items with key-set pagination
      operationId: listItems
      tags:
        - Items
      parameters:
        - $ref: '#/components/parameters/AfterKey'
        - $ref: '#/components/parameters/Limit'
        - name: Sort
          in: query
          schema:
            type: string
            enum: [created_at, updated_at, name]
          description: Sort order for results
      responses:
        '200':
          description: Items retrieved successfully
          headers:
            ETag:
              schema:
                type: string
              description: Entity tag for caching
            X-RateLimit-Limit:
              schema:
                type: integer
            X-RateLimit-Remaining:
              schema:
                type: integer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            created_at:
                              type: string
                              format: date-time
        '304':
          description: Not Modified
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
    post:
      summary: Create a new item
      operationId: createItem
      tags:
        - Items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
      responses:
        '202':
          description: Accepted for processing
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: URI of the created resource
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEnvelope'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          status:
                            type: string
                            enum: [pending, processing, completed]
        '400':
          description: Invalid request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
security:
  - OAuth2: [read]
  - BearerAuth: []
  - ApiKeyAuth: []
tags:
  - name: System
    description: System operations
  - name: Items
    description: Item management operations
x-spectral-rules:
  require-operation-id:
    severity: error
    given: $.paths[*][*]
    then:
      field: operationId
      function: truthy
  require-tags:
    severity: warn
    given: $.paths[*][*]
    then:
      field: tags
      function: truthy