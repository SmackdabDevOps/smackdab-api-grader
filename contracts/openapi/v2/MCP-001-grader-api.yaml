# ============================================================================
# SMACKDAB MCP API GRADER v2.0.0
# ============================================================================
# OpenAPI specification for the MCP Server API Grader service
# Grade Target: 100/100
# Last Updated: 2025-01-10
# ============================================================================

openapi: 3.0.3

# ============================================================================
# API METADATA
# ============================================================================
info:
  title: Smackdab MCP API Grader Service
  description: |
    # MCP API Grader Service
    
    Enterprise-grade API contract validation and grading service that ensures OpenAPI specifications meet Smackdab's rigorous quality standards. This service provides comprehensive API contract analysis, scoring, and improvement recommendations.
    
    ## Key Features
    - **Comprehensive API Grading**: Validates OpenAPI 3.0.3 specifications against 100+ quality checkpoints
    - **Real-time Validation**: Instant feedback on API contract compliance and best practices
    - **Historical Tracking**: Maintains grading history for continuous improvement tracking
    - **Automated Fixes**: Suggests and applies corrections to common API design issues
    - **Multi-tenant Support**: Full tenant isolation with organization and branch context
    
    ## Business Rules Implemented
    - **RULE-GRD-001**: All APIs must achieve minimum 80% compliance for production deployment
    - **RULE-GRD-002**: Critical security violations trigger automatic grade failure
    - **RULE-GRD-003**: Multi-tenant headers mandatory on all endpoints
    - **RULE-GRD-004**: Rate limiting enforced per tenant with tiered quotas
    - **RULE-GRD-005**: API contracts must follow HATEOAS Level 3 REST principles
    
    ## Technical Architecture
    - **Database**: PostgreSQL with Citus distribution by organization_id
    - **Caching**: Dragonfly/Valkey for grading result caching
    - **Events**: Apache Pulsar for async grading job processing
    - **Search**: PostgreSQL full-text search for finding patterns
    - **Real-time**: WebSocket with Pulsar for live grading updates
    - **Scoring Engine**: Coverage-based or legacy binary scoring
    
    ## Performance Characteristics
    - Grading operations: <2000ms p95 for standard APIs
    - Bulk grading: 100 APIs/minute throughput
    - Cache hit ratio: >90% for repeated validations
    - Availability target: 99.95%
    
    ## Security Model
    - OAuth2 with granular scopes (grader.read, grader.write, grader.admin)
    - Multi-tenant isolation via headers (X-Organization-ID, X-Branch-ID)
    - Rate limiting: 100 req/min standard, 500 req/min premium
    - Audit logging for all grading operations
    - JWT claims include org_id and branch_id for Citus routing
    
  version: 2.0.0
  contact:
    name: Smackdab API Support
    email: api-support@smackdab.com
    url: https://docs.smackdab.com/grader
  license:
    name: Proprietary
    url: https://smackdab.com/license

# ============================================================================
# SERVERS
# ============================================================================
servers:
  - url: https://api.smackdab.com
    description: Production server
  - url: https://staging-api.smackdab.com
    description: Staging server
  - url: http://localhost:3001
    description: Development server

# ============================================================================
# EXTENSION: RATE LIMITING
# ============================================================================
x-rate-limiting:
  standard:
    requests_per_minute: 100
    burst_size: 20
  premium:
    requests_per_minute: 500
    burst_size: 100
  bulk:
    requests_per_minute: 1000
    burst_size: 200

# ============================================================================
# EXTENSION: CACHING STRATEGY
# ============================================================================
x-caching-strategy:
  default_ttl: 300  # 5 minutes
  grade_results_ttl: 3600  # 1 hour
  checkpoint_list_ttl: 86400  # 24 hours
  invalidation_events:
    - template_update
    - ruleset_change
    - scoring_engine_update

# ============================================================================
# EXTENSION: PERFORMANCE SLAs
# ============================================================================
x-performance-slas:
  grade_contract:
    p50: 500
    p95: 2000
    p99: 5000
  list_checkpoints:
    p50: 50
    p95: 100
    p99: 200
  version:
    p50: 10
    p95: 20
    p99: 50

# ============================================================================
# TAGS
# ============================================================================
tags:
  - name: Grading
    description: API contract grading operations
    x-displayName: Grading Operations
  - name: Analysis
    description: API analysis and recommendations
    x-displayName: Analysis Tools
  - name: History
    description: Historical grading data
    x-displayName: History Management
  - name: System
    description: System information and health
    x-displayName: System Operations

# ============================================================================
# SECURITY SCHEMES
# ============================================================================
security:
  - OAuth2: []
  - BearerAuth: []

# ============================================================================
# PATHS
# ============================================================================
paths:
  /api/v2/grader/version:
    get:
      summary: Get grader version information
      description: Returns detailed version information about the grader service including scoring engine type and instance metadata
      operationId: getVersion
      tags:
        - System
      security:
        - OAuth2: ["grader.read"]
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          description: Version information retrieved successfully
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
            Cache-Control:
              schema:
                type: string
                example: "public, max-age=300"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
              examples:
                coverage_based:
                  summary: Coverage-based scoring engine
                  value:
                    success: true
                    data:
                      server_version: "2.0.0"
                      scoring_engine: "coverage-based"
                      instance_id: "a1b2c3d4"
                      instance_start_time: "2025-01-10T10:00:00Z"
                      ruleset_hash: "sha256:abc123..."
                      template_version: "3.2.3"
                      template_hash: "sha256:def456..."
                      tool_versions:
                        grader: "2.0.0"
                        scoring_system: "coverage-based-v1"
                    meta:
                      request_id: "req_123abc"
                      timestamp: "2025-01-10T12:00:00Z"
                legacy:
                  summary: Legacy scoring engine
                  value:
                    success: true
                    data:
                      server_version: "1.2.0"
                      scoring_engine: "legacy"
                      instance_id: "b2c3d4e5"
                      instance_start_time: "2025-01-10T09:00:00Z"
                      ruleset_hash: "sha256:ghi789..."
                      template_version: "3.2.3"
                      template_hash: "sha256:jkl012..."
                      tool_versions:
                        grader: "1.2.0"
                        scoring_system: "legacy-binary"
                    meta:
                      request_id: "req_456def"
                      timestamp: "2025-01-10T12:00:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v2/grader/checkpoints:
    get:
      summary: List all grading checkpoints
      description: Returns the complete list of grading checkpoints used for API validation with their weights and categories
      operationId: listCheckpoints
      tags:
        - System
      security:
        - OAuth2: ["grader.read"]
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationHeader'
        - $ref: '#/components/parameters/BranchHeader'
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/IfNoneMatch'
      responses:
        '200':
          description: Checkpoints retrieved successfully
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
            ETag:
              schema:
                type: string
                example: '"abc123def456"'
            Cache-Control:
              schema:
                type: string
                example: "public, max-age=86400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointsResponse'
              examples:
                standard:
                  summary: Standard checkpoints list
                  value:
                    success: true
                    data:
                      - id: "OAS-VERSION"
                        category: "structure"
                        description: "OpenAPI version must be 3.0.3"
                        weight: 10
                        auto_fail: true
                      - id: "MULTI-TENANT"
                        category: "security"
                        description: "Multi-tenant headers required"
                        weight: 15
                        auto_fail: true
                      - id: "HATEOAS"
                        category: "rest"
                        description: "HATEOAS Level 3 compliance"
                        weight: 20
                        auto_fail: false
                    meta:
                      request_id: "req_789ghi"
                      timestamp: "2025-01-10T12:00:00Z"
                      total_checkpoints: 120
                      total_weight: 100
        '304':
          $ref: '#/components/responses/NotModified'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v2/grader/grade:
    post:
      summary: Grade an OpenAPI specification
      description: |
        Grades an OpenAPI specification file against Smackdab quality standards.
        Supports both file upload and URL reference.
      operationId: gradeContract
      tags:
        - Grading
      security:
        - OAuth2: ["grader.write"]
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationHeader'
        - $ref: '#/components/parameters/BranchHeader'
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeRequest'
            examples:
              file_upload:
                summary: Grade uploaded file content
                value:
                  content: "b3BlbmFwaTogMy4wLjMKaW5mbzoKICB0aXRsZTogU2FtcGxlIEFQSQogIHZlcnNpb246IDEuMC4w..."
                  is_url: false
                  template_path: "/templates/MASTER_API_TEMPLATE_v3.yaml"
              url_reference:
                summary: Grade from URL
                value:
                  content: "https://raw.githubusercontent.com/org/repo/main/api.yaml"
                  is_url: true
                  template_path: "/templates/MASTER_API_TEMPLATE_v3.yaml"
                  legacy_mode: false
      responses:
        '200':
          description: Grading completed successfully
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeResponse'
              examples:
                perfect_score:
                  summary: Perfect API specification
                  value:
                    success: true
                    data:
                      grade:
                        total: 100
                        letter: "A+"
                        compliance_pct: 1.0
                        auto_fail_triggered: false
                        critical_issues: 0
                        per_category:
                          structure: { earned: 20, max: 20, percentage: 100 }
                          security: { earned: 25, max: 25, percentage: 100 }
                          rest: { earned: 30, max: 30, percentage: 100 }
                          documentation: { earned: 25, max: 25, percentage: 100 }
                      findings: []
                      metadata:
                        spec_hash: "sha256:123abc..."
                        template_hash: "sha256:456def..."
                        ruleset_hash: "sha256:789ghi..."
                        template_version: "3.2.3"
                        scoring_engine: "coverage-based"
                        graded_at: "2025-01-10T12:00:00Z"
                    meta:
                      request_id: "req_abc123"
                      processing_time_ms: 1250
                failed_grade:
                  summary: Failed API specification
                  value:
                    success: true
                    data:
                      grade:
                        total: 45
                        letter: "F"
                        compliance_pct: 0.45
                        auto_fail_triggered: true
                        critical_issues: 5
                        auto_fail_reasons:
                          - "OpenAPI version not 3.0.3"
                          - "Missing multi-tenant headers"
                        per_category:
                          structure: { earned: 5, max: 20, percentage: 25 }
                          security: { earned: 10, max: 25, percentage: 40 }
                          rest: { earned: 20, max: 30, percentage: 67 }
                          documentation: { earned: 10, max: 25, percentage: 40 }
                      findings:
                        - rule_id: "OAS-VERSION"
                          message: "OpenAPI version must be 3.0.3, found 3.1.0"
                          severity: "error"
                          json_path: "$.openapi"
                          category: "structure"
                          line: 1
                        - rule_id: "MULTI-TENANT"
                          message: "Missing required X-Organization-ID header"
                          severity: "error"
                          json_path: "$.paths./api/v2/products.get.parameters"
                          category: "security"
                          line: 45
                      metadata:
                        spec_hash: "sha256:321cba..."
                        template_hash: "sha256:654fed..."
                        ruleset_hash: "sha256:987ihg..."
                        template_version: "3.2.3"
                        scoring_engine: "coverage-based"
                        graded_at: "2025-01-10T12:05:00Z"
                    meta:
                      request_id: "req_def456"
                      processing_time_ms: 1850
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v2/grader/grade-inline:
    post:
      summary: Grade inline YAML content
      description: Grades OpenAPI specification content provided directly in the request body
      operationId: gradeInline
      tags:
        - Grading
      security:
        - OAuth2: ["grader.write"]
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationHeader'
        - $ref: '#/components/parameters/BranchHeader'
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/x-yaml:
            schema:
              type: string
              description: Raw YAML content of the OpenAPI specification
            example: |
              openapi: 3.0.3
              info:
                title: Sample API
                version: 1.0.0
              paths:
                /api/v2/resources:
                  get:
                    summary: List resources
                    responses:
                      '200':
                        description: Success
      responses:
        '200':
          description: Grading completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v2/grader/grade-and-record:
    post:
      summary: Grade and save to database
      description: |
        Grades an OpenAPI specification and persists the results to the database for historical tracking.
        Returns both the grading results and a unique run ID for future reference.
      operationId: gradeAndRecord
      tags:
        - Grading
      security:
        - OAuth2: ["grader.write"]
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationHeader'
        - $ref: '#/components/parameters/BranchHeader'
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradeAndRecordRequest'
            examples:
              with_metadata:
                summary: Grade with Git metadata
                value:
                  content: "b3BlbmFwaTogMy4wLjMKaW5mbzoKICB0aXRsZTogU2FtcGxlIEFQSQogIHZlcnNpb246IDEuMC4w..."
                  is_url: false
                  template_path: "/templates/MASTER_API_TEMPLATE_v3.yaml"
                  git_metadata:
                    repo_remote: "https://github.com/org/repo.git"
                    repo_branch: "main"
                    repo_path: "/apis/inventory.yaml"
                    git_commit: "abc123def456"
      responses:
        '201':
          description: Grading completed and recorded successfully
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
            Location:
              schema:
                type: string
                example: "/api/v2/grader/runs/run_abc123"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GradeAndRecordResponse'
              examples:
                recorded:
                  summary: Successfully recorded grading
                  value:
                    success: true
                    data:
                      run_id: "run_abc123def456"
                      api_id: "urn:smackdab:api:789ghi"
                      grade:
                        total: 85
                        letter: "B"
                        compliance_pct: 0.85
                        auto_fail_triggered: false
                        critical_issues: 2
                        per_category:
                          structure: { earned: 18, max: 20, percentage: 90 }
                          security: { earned: 20, max: 25, percentage: 80 }
                          rest: { earned: 25, max: 30, percentage: 83 }
                          documentation: { earned: 22, max: 25, percentage: 88 }
                      findings: []
                      metadata:
                        spec_hash: "sha256:abc123..."
                        template_hash: "sha256:def456..."
                        ruleset_hash: "sha256:ghi789..."
                        template_version: "3.2.3"
                        scoring_engine: "coverage-based"
                        graded_at: "2025-01-10T12:10:00Z"
                    meta:
                      request_id: "req_ghi789"
                      processing_time_ms: 2100
                    _links:
                      self: { href: "/api/v2/grader/runs/run_abc123def456" }
                      api_history: { href: "/api/v2/grader/apis/urn:smackdab:api:789ghi/history" }
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v2/grader/findings/{ruleId}/explain:
    get:
      summary: Explain a specific rule violation
      description: Provides detailed explanation of a grading rule including why it matters and how to fix violations
      operationId: explainFinding
      tags:
        - Analysis
      security:
        - OAuth2: ["grader.read"]
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationHeader'
        - $ref: '#/components/parameters/BranchHeader'
        - $ref: '#/components/parameters/RequestId'
        - name: ruleId
          in: path
          required: true
          description: The rule identifier to explain
          schema:
            type: string
            pattern: '^[A-Z]+-[A-Z]+-\d{3}$'
            example: "OAS-VERSION"
      responses:
        '200':
          description: Rule explanation retrieved successfully
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
            Cache-Control:
              schema:
                type: string
                example: "public, max-age=3600"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplainResponse'
              examples:
                version_rule:
                  summary: OpenAPI version rule explanation
                  value:
                    success: true
                    data:
                      rule_id: "OAS-VERSION"
                      category: "structure"
                      description: "OpenAPI version must be 3.0.3 for maximum compatibility"
                      weight: 10
                      auto_fail: true
                      explanation:
                        why_it_matters: "Version 3.0.3 ensures compatibility with all tooling and SDK generators"
                        how_to_fix: "Change the 'openapi' field at the root of your specification to '3.0.3'"
                        common_mistakes:
                          - "Using version 3.1.0 which has breaking changes"
                          - "Using version 2.0 (Swagger) which is deprecated"
                        example_correct: |
                          openapi: 3.0.3
                          info:
                            title: Your API
                            version: 1.0.0
                        example_incorrect: |
                          openapi: 3.1.0  # Wrong version!
                          info:
                            title: Your API
                            version: 1.0.0
                    meta:
                      request_id: "req_jkl012"
                      timestamp: "2025-01-10T12:15:00Z"
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v2/grader/suggest-fixes:
    post:
      summary: Suggest fixes for API specification
      description: |
        Analyzes an API specification and suggests specific fixes for identified issues.
        Returns a list of actionable patches that can be applied to improve the API grade.
      operationId: suggestFixes
      tags:
        - Analysis
      security:
        - OAuth2: ["grader.write"]
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationHeader'
        - $ref: '#/components/parameters/BranchHeader'
        - $ref: '#/components/parameters/RequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestFixesRequest'
            examples:
              analyze_file:
                summary: Analyze file for fixes
                value:
                  content: "b3BlbmFwaTogMy4wLjMKaW5mbzoKICB0aXRsZTogU2FtcGxlIEFQSQogIHZlcnNpb246IDEuMC4w..."
                  is_url: false
                  max_fixes: 10
                  categories:
                    - "structure"
                    - "security"
      responses:
        '200':
          description: Fix suggestions generated successfully
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestFixesResponse'
              examples:
                multiple_fixes:
                  summary: Multiple fixes suggested
                  value:
                    success: true
                    data:
                      count: 3
                      fixes:
                        - rule_id: "MULTI-TENANT"
                          description: "Add missing X-Organization-ID header"
                          severity: "error"
                          json_path: "$.paths./api/v2/products.get.parameters"
                          patch:
                            op: "add"
                            path: "/paths/~1api~1v2~1products/get/parameters/-"
                            value:
                              name: "X-Organization-ID"
                              in: "header"
                              required: true
                              schema:
                                type: "string"
                                format: "uuid"
                          estimated_score_impact: 15
                        - rule_id: "RATE-LIMIT"
                          description: "Add rate limit headers to response"
                          severity: "warning"
                          json_path: "$.paths./api/v2/products.get.responses.200.headers"
                          patch:
                            op: "add"
                            path: "/paths/~1api~1v2~1products/get/responses/200/headers/X-RateLimit-Limit"
                            value:
                              schema:
                                type: "integer"
                          estimated_score_impact: 5
                        - rule_id: "PAGINATION"
                          description: "Use key-set pagination instead of offset"
                          severity: "warning"
                          json_path: "$.paths./api/v2/products.get.parameters"
                          patch:
                            op: "replace"
                            path: "/paths/~1api~1v2~1products/get/parameters/0"
                            value:
                              name: "after_key"
                              in: "query"
                              schema:
                                type: "string"
                          estimated_score_impact: 8
                      total_estimated_impact: 28
                    meta:
                      request_id: "req_mno345"
                      processing_time_ms: 450
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/v2/grader/apis/{apiId}/history:
    get:
      summary: Get API grading history
      description: |
        Retrieves the grading history for a specific API, showing how its compliance score
        has changed over time. Useful for tracking improvement trends.
      operationId: getApiHistory
      tags:
        - History
      security:
        - OAuth2: ["grader.read"]
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationHeader'
        - $ref: '#/components/parameters/BranchHeader'
        - $ref: '#/components/parameters/RequestId'
        - name: apiId
          in: path
          required: true
          description: The unique API identifier
          schema:
            type: string
            pattern: '^urn:smackdab:api:[a-f0-9]{12}$'
            example: "urn:smackdab:api:abc123def456"
        - name: since
          in: query
          description: Filter results to grades after this timestamp
          schema:
            type: string
            format: date-time
            example: "2025-01-01T00:00:00Z"
        - name: limit
          in: query
          description: Maximum number of history entries to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: History retrieved successfully
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
            Cache-Control:
              schema:
                type: string
                example: "private, max-age=60"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryResponse'
              examples:
                improvement_trend:
                  summary: API showing improvement over time
                  value:
                    success: true
                    data:
                      api_id: "urn:smackdab:api:abc123def456"
                      history:
                        - run_id: "run_latest456"
                          graded_at: "2025-01-10T12:00:00Z"
                          total_score: 95
                          letter_grade: "A"
                          auto_fail: false
                          critical_issues: 0
                          findings_count: 2
                          template_hash: "sha256:current..."
                          ruleset_hash: "sha256:current..."
                        - run_id: "run_middle789"
                          graded_at: "2025-01-08T10:00:00Z"
                          total_score: 82
                          letter_grade: "B-"
                          auto_fail: false
                          critical_issues: 1
                          findings_count: 8
                          template_hash: "sha256:previous..."
                          ruleset_hash: "sha256:previous..."
                        - run_id: "run_oldest012"
                          graded_at: "2025-01-05T08:00:00Z"
                          total_score: 65
                          letter_grade: "D"
                          auto_fail: true
                          critical_issues: 5
                          findings_count: 25
                          template_hash: "sha256:older..."
                          ruleset_hash: "sha256:older..."
                      trend: "improving"
                      average_score: 80.67
                      best_score: 95
                      worst_score: 65
                    meta:
                      request_id: "req_pqr678"
                      timestamp: "2025-01-10T12:20:00Z"
                      total_runs: 3
                    _links:
                      self: { href: "/api/v2/grader/apis/urn:smackdab:api:abc123def456/history" }
                      latest_run: { href: "/api/v2/grader/runs/run_latest456" }
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the grader service
      operationId: healthCheck
      tags:
        - System
      security: []  # No auth required for health checks
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - version
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                  version:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
              example:
                status: "healthy"
                version: "2.0.0"
                timestamp: "2025-01-10T12:00:00Z"
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

# ============================================================================
# WEBHOOKS
# ============================================================================
webhooks:
  gradingCompleted:
    post:
      description: |
        Webhook fired when an async grading job completes.
        **Retry Policy**: 3 retries with exponential backoff (1s, 2s, 4s)
        **Timeout**: 5 seconds per request
        **Signature**: HMAC-SHA256 in X-Webhook-Signature header
      x-retry-policy:
        attempts: 3
        backoff: exponential
        initial_delay: 1000
        max_delay: 4000
      x-signature:
        algorithm: HMAC-SHA256
        header: X-Webhook-Signature
      x-timeout: 5000
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GradingCompletedWebhook'
            example:
              event_id: "evt_abc123"
              event_type: "grading.completed"
              timestamp: "2025-01-10T12:00:00Z"
              organization_id: "org_123"
              branch_id: "branch_456"
              data:
                run_id: "run_def789"
                api_id: "urn:smackdab:api:ghi012"
                grade:
                  total: 85
                  letter: "B"
                  compliance_pct: 0.85
                critical_issues: 2
                findings_count: 10
      responses:
        '200':
          description: Webhook processed successfully
        '400':
          description: Invalid webhook payload
        '401':
          description: Invalid signature

# ============================================================================
# COMPONENTS
# ============================================================================
components:
  # ============================================================================
  # SECURITY SCHEMES
  # ============================================================================
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.smackdab.com/oauth/authorize
          tokenUrl: https://auth.smackdab.com/oauth/token
          scopes:
            grader.read: Read grading results and checkpoints
            grader.write: Perform grading operations
            grader.admin: Administrative operations
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token containing:
        - org_id: Organization UUID
        - branch_id: Branch UUID
        - user_id: User UUID
        - permissions: Array of permission strings

  # ============================================================================
  # PARAMETERS
  # ============================================================================
  parameters:
    OrganizationHeader:
      name: X-Organization-ID
      in: header
      required: true
      description: Organization identifier for multi-tenant isolation
      schema:
        type: string
        format: uuid
      example: "123e4567-e89b-12d3-a456-426614174000"

    BranchHeader:
      name: X-Branch-ID
      in: header
      required: true
      description: Branch identifier for multi-tenant isolation
      schema:
        type: string
        format: uuid
      example: "456e7890-e89b-12d3-a456-426614174111"

    RequestId:
      name: X-Request-ID
      in: header
      required: false
      description: Unique request identifier for tracing
      schema:
        type: string
        format: uuid
      example: "789e0123-e89b-12d3-a456-426614174222"

    IdempotencyKey:
      name: X-Idempotency-Key
      in: header
      required: false
      description: Idempotency key for safe retries
      schema:
        type: string
        minLength: 16
        maxLength: 64
      example: "unique-key-123abc"

    IfNoneMatch:
      name: If-None-Match
      in: header
      required: false
      description: ETag for conditional requests
      schema:
        type: string
      example: '"abc123def456"'

    AfterKey:
      name: after_key
      in: query
      description: Key-set pagination marker
      schema:
        type: string
      example: "checkpoint_123:2025-01-10T10:00:00Z"

    BeforeKey:
      name: before_key
      in: query
      description: Reverse pagination marker
      schema:
        type: string
      example: "checkpoint_100:2025-01-09T10:00:00Z"

    Limit:
      name: limit
      in: query
      description: Maximum items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

  # ============================================================================
  # HEADERS
  # ============================================================================
  headers:
    RateLimitLimit:
      description: Rate limit ceiling for current tier
      schema:
        type: integer
      example: 100

    RateLimitRemaining:
      description: Requests remaining in current window
      schema:
        type: integer
      example: 95

    RateLimitReset:
      description: UTC timestamp when rate limit resets
      schema:
        type: integer
      example: 1704934800

  # ============================================================================
  # SCHEMAS
  # ============================================================================
  schemas:
    # Response Envelope
    ResponseEnvelope:
      type: object
      required:
        - success
        - data
        - meta
      properties:
        success:
          type: boolean
          description: Whether the request was successful
        data:
          type: object
          description: Response payload
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        _links:
          $ref: '#/components/schemas/HATEOASLinks'

    ResponseMeta:
      type: object
      required:
        - request_id
        - timestamp
      properties:
        request_id:
          type: string
          format: uuid
          description: Unique request identifier
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
        processing_time_ms:
          type: integer
          description: Processing time in milliseconds
        warnings:
          type: array
          items:
            type: string
          description: Non-critical warnings

    HATEOASLinks:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              format: uri
        collection:
          type: object
          properties:
            href:
              type: string
              format: uri
        next:
          type: object
          properties:
            href:
              type: string
              format: uri
        prev:
          type: object
          properties:
            href:
              type: string
              format: uri

    # Version Response
    VersionResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            data:
              type: object
              required:
                - server_version
                - scoring_engine
                - instance_id
                - template_version
              properties:
                server_version:
                  type: string
                  example: "2.0.0"
                scoring_engine:
                  type: string
                  enum: [coverage-based, legacy]
                instance_id:
                  type: string
                  example: "a1b2c3d4"
                instance_start_time:
                  type: string
                  format: date-time
                ruleset_hash:
                  type: string
                  pattern: '^sha256:[a-f0-9]{64}$'
                template_version:
                  type: string
                  example: "3.2.3"
                template_hash:
                  type: string
                  pattern: '^sha256:[a-f0-9]{64}$'
                tool_versions:
                  type: object
                  properties:
                    grader:
                      type: string
                    scoring_system:
                      type: string

    # Checkpoints Response
    CheckpointsResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Checkpoint'
            meta:
              allOf:
                - $ref: '#/components/schemas/ResponseMeta'
                - type: object
                  properties:
                    total_checkpoints:
                      type: integer
                    total_weight:
                      type: integer

    Checkpoint:
      type: object
      required:
        - id
        - category
        - description
        - weight
        - auto_fail
      properties:
        id:
          type: string
          example: "OAS-VERSION"
        category:
          type: string
          enum: [structure, security, rest, documentation, performance, webhooks]
        description:
          type: string
        weight:
          type: integer
          minimum: 0
          maximum: 100
        auto_fail:
          type: boolean
          description: Whether violation triggers automatic failure

    # Grade Request
    GradeRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: Base64 encoded YAML content or URL to specification
        is_url:
          type: boolean
          default: false
          description: Whether content is a URL reference
        template_path:
          type: string
          description: Path to grading template
          default: "/templates/MASTER_API_TEMPLATE_v3.yaml"
        legacy_mode:
          type: boolean
          default: false
          description: Use legacy binary scoring instead of coverage-based

    # Grade Response
    GradeResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            data:
              type: object
              required:
                - grade
                - findings
                - metadata
              properties:
                grade:
                  $ref: '#/components/schemas/Grade'
                findings:
                  type: array
                  items:
                    $ref: '#/components/schemas/Finding'
                checkpoints:
                  type: array
                  items:
                    $ref: '#/components/schemas/CheckpointScore'
                metadata:
                  $ref: '#/components/schemas/GradingMetadata'

    Grade:
      type: object
      required:
        - total
        - letter
        - compliance_pct
        - auto_fail_triggered
        - critical_issues
      properties:
        total:
          type: number
          minimum: 0
          maximum: 100
        letter:
          type: string
          enum: [A+, A, A-, B+, B, B-, C, D, F]
        compliance_pct:
          type: number
          minimum: 0
          maximum: 1
        auto_fail_triggered:
          type: boolean
        critical_issues:
          type: integer
          minimum: 0
        auto_fail_reasons:
          type: array
          items:
            type: string
        per_category:
          type: object
          additionalProperties:
            type: object
            properties:
              earned:
                type: number
              max:
                type: number
              percentage:
                type: number
        coverage_based:
          type: boolean
          description: Whether coverage-based scoring was used
        excellence:
          type: object
          description: Excellence metrics for high-scoring APIs

    Finding:
      type: object
      required:
        - rule_id
        - message
        - severity
        - json_path
      properties:
        rule_id:
          type: string
        message:
          type: string
        severity:
          type: string
          enum: [error, warning, info]
        json_path:
          type: string
        category:
          type: string
        line:
          type: integer

    CheckpointScore:
      type: object
      required:
        - checkpoint_id
        - category
        - max_points
        - scored_points
      properties:
        checkpoint_id:
          type: string
        category:
          type: string
        max_points:
          type: integer
        scored_points:
          type: integer

    GradingMetadata:
      type: object
      required:
        - spec_hash
        - template_hash
        - ruleset_hash
        - template_version
        - scoring_engine
      properties:
        spec_hash:
          type: string
          pattern: '^sha256:[a-f0-9]{64}$'
        template_hash:
          type: string
          pattern: '^sha256:[a-f0-9]{64}$'
        ruleset_hash:
          type: string
          pattern: '^sha256:[a-f0-9]{64}$'
        template_version:
          type: string
        scoring_engine:
          type: string
          enum: [coverage-based, legacy]
        instance_id:
          type: string
        instance_start_time:
          type: string
          format: date-time
        graded_at:
          type: string
          format: date-time

    # Grade and Record Request
    GradeAndRecordRequest:
      allOf:
        - $ref: '#/components/schemas/GradeRequest'
        - type: object
          properties:
            git_metadata:
              type: object
              properties:
                repo_remote:
                  type: string
                  format: uri
                repo_branch:
                  type: string
                repo_path:
                  type: string
                git_commit:
                  type: string
                  pattern: '^[a-f0-9]{40}$'

    # Grade and Record Response
    GradeAndRecordResponse:
      allOf:
        - $ref: '#/components/schemas/GradeResponse'
        - type: object
          properties:
            data:
              allOf:
                - $ref: '#/components/schemas/GradeResponse/properties/data'
                - type: object
                  required:
                    - run_id
                    - api_id
                  properties:
                    run_id:
                      type: string
                      pattern: '^run_[a-f0-9]{12}$'
                    api_id:
                      type: string
                      pattern: '^urn:smackdab:api:[a-f0-9]{12}$'

    # Explain Response
    ExplainResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            data:
              type: object
              required:
                - rule_id
                - category
                - description
                - weight
                - auto_fail
                - explanation
              properties:
                rule_id:
                  type: string
                category:
                  type: string
                description:
                  type: string
                weight:
                  type: integer
                auto_fail:
                  type: boolean
                explanation:
                  type: object
                  properties:
                    why_it_matters:
                      type: string
                    how_to_fix:
                      type: string
                    common_mistakes:
                      type: array
                      items:
                        type: string
                    example_correct:
                      type: string
                    example_incorrect:
                      type: string

    # Suggest Fixes Request
    SuggestFixesRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: Base64 encoded YAML content or URL
        is_url:
          type: boolean
          default: false
        max_fixes:
          type: integer
          minimum: 1
          maximum: 50
          default: 10
        categories:
          type: array
          items:
            type: string
            enum: [structure, security, rest, documentation, performance, webhooks]

    # Suggest Fixes Response
    SuggestFixesResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            data:
              type: object
              required:
                - count
                - fixes
              properties:
                count:
                  type: integer
                fixes:
                  type: array
                  items:
                    $ref: '#/components/schemas/Fix'
                total_estimated_impact:
                  type: integer
                  description: Total estimated score improvement

    Fix:
      type: object
      required:
        - rule_id
        - description
        - severity
        - json_path
        - patch
      properties:
        rule_id:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [error, warning, info]
        json_path:
          type: string
        patch:
          type: object
          description: JSON Patch operation
          properties:
            op:
              type: string
              enum: [add, remove, replace, move, copy, test]
            path:
              type: string
            value:
              type: object
            from:
              type: string
        estimated_score_impact:
          type: integer
          minimum: 0
          maximum: 100

    # History Response
    HistoryResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            data:
              type: object
              required:
                - api_id
                - history
              properties:
                api_id:
                  type: string
                  pattern: '^urn:smackdab:api:[a-f0-9]{12}$'
                history:
                  type: array
                  items:
                    $ref: '#/components/schemas/HistoryEntry'
                trend:
                  type: string
                  enum: [improving, declining, stable]
                average_score:
                  type: number
                best_score:
                  type: number
                worst_score:
                  type: number
            meta:
              allOf:
                - $ref: '#/components/schemas/ResponseMeta'
                - type: object
                  properties:
                    total_runs:
                      type: integer

    HistoryEntry:
      type: object
      required:
        - run_id
        - graded_at
        - total_score
        - letter_grade
        - auto_fail
        - critical_issues
        - findings_count
      properties:
        run_id:
          type: string
          pattern: '^run_[a-f0-9]{12}$'
        graded_at:
          type: string
          format: date-time
        total_score:
          type: number
        letter_grade:
          type: string
          enum: [A+, A, A-, B+, B, B-, C, D, F]
        auto_fail:
          type: boolean
        critical_issues:
          type: integer
        findings_count:
          type: integer
        template_hash:
          type: string
        ruleset_hash:
          type: string

    # Webhook Schemas
    GradingCompletedWebhook:
      type: object
      required:
        - event_id
        - event_type
        - timestamp
        - organization_id
        - branch_id
        - data
      properties:
        event_id:
          type: string
          format: uuid
        event_type:
          type: string
          enum: [grading.completed, grading.failed]
        timestamp:
          type: string
          format: date-time
        organization_id:
          type: string
          format: uuid
        branch_id:
          type: string
          format: uuid
        data:
          type: object
          properties:
            run_id:
              type: string
            api_id:
              type: string
            grade:
              $ref: '#/components/schemas/Grade'
            critical_issues:
              type: integer
            findings_count:
              type: integer

    # Error Response (RFC 7807)
    ProblemDetail:
      type: object
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
          format: uri
          example: "https://api.smackdab.com/problems/validation-error"
        title:
          type: string
          example: "Validation Error"
        status:
          type: integer
          example: 400
        detail:
          type: string
          example: "The request contains invalid field values"
        instance:
          type: string
          format: uri
          example: "/api/v2/grader/grade"
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: "/data/content"
              code:
                type: string
                example: "REQUIRED"
              message:
                type: string
                example: "Content field is required"

  # ============================================================================
  # RESPONSES
  # ============================================================================
  responses:
    BadRequest:
      description: Bad request - invalid input
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/bad-request"
            title: "Bad Request"
            status: 400
            detail: "Invalid request parameters"
            instance: "/api/v2/grader/grade"

    Unauthorized:
      description: Authentication required
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/unauthorized"
            title: "Unauthorized"
            status: 401
            detail: "Invalid or missing authentication token"
            instance: "/api/v2/grader/grade"

    Forbidden:
      description: Insufficient permissions
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/forbidden"
            title: "Forbidden"
            status: 403
            detail: "You don't have permission to access this resource"
            instance: "/api/v2/grader/grade"

    NotFound:
      description: Resource not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/not-found"
            title: "Not Found"
            status: 404
            detail: "The requested resource was not found"
            instance: "/api/v2/grader/findings/UNKNOWN-RULE/explain"

    Conflict:
      description: Resource conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/conflict"
            title: "Conflict"
            status: 409
            detail: "Idempotency key already used with different request body"
            instance: "/api/v2/grader/grade"

    UnsupportedMediaType:
      description: Unsupported media type
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/unsupported-media-type"
            title: "Unsupported Media Type"
            status: 415
            detail: "Content-Type must be application/json or application/x-yaml"
            instance: "/api/v2/grader/grade"

    UnprocessableEntity:
      description: Validation failed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/validation-error"
            title: "Validation Error"
            status: 422
            detail: "The OpenAPI specification is not valid YAML"
            instance: "/api/v2/grader/grade"
            errors:
              - field: "/data/content"
                code: "INVALID_YAML"
                message: "Content is not valid YAML syntax"

    TooManyRequests:
      description: Rate limit exceeded
      headers:
        Retry-After:
          schema:
            type: integer
          description: Seconds until rate limit resets
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/rate-limit-exceeded"
            title: "Too Many Requests"
            status: 429
            detail: "Rate limit exceeded. Please retry after 60 seconds"
            instance: "/api/v2/grader/grade"

    InternalServerError:
      description: Internal server error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/internal-error"
            title: "Internal Server Error"
            status: 500
            detail: "An unexpected error occurred"
            instance: "/api/v2/grader/grade"

    ServiceUnavailable:
      description: Service temporarily unavailable
      headers:
        Retry-After:
          schema:
            type: integer
          description: Seconds until service is available
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://api.smackdab.com/problems/service-unavailable"
            title: "Service Unavailable"
            status: 503
            detail: "Service is temporarily unavailable for maintenance"
            instance: "/api/v2/grader/grade"

    NotModified:
      description: Resource not modified (cached response valid)